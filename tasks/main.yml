---
- name: Ensure legacy packages are absent
  apt:
    pkg:
      - lxc-docker
      - docker
      - docker-engine
    state: absent
    purge: true

- name: Ensure the system can use the HTTPS transport for APT
  stat:
    path: /usr/lib/apt/methods/https
  register: apt_https_transport

- name: Install HTTPS transport for APT
  apt:
    pkg: apt-transport-https
    state: present
  when: not apt_https_transport.stat.exists
  register: result
  until: result is succeeded

- name: Import docker GPG key to apt
  apt_key:
    url: "{{ docker_apt_key_url }}"
    state: present
  register: result
  until: result is succeeded

- name: Add docker repository
  apt_repository:
    repo: 'deb {{ docker_apt_repository_url }}/{{ docker_distribution }} {{ docker_distribution_release }} stable'
    state: present

- name: Add docker repository preferences
  template:
    src: apt_docker.pref.2
    dest: /etc/apt/preferences.d/docker.pref

- name: Install docker
  apt:
    pkg: "{{ docker_package }}={{ docker_debian_version }}"
    state: present
  register: result
  until: result is succeeded

- name: Create docker.service.d directory
  file:
    path: "{{ docker_override_path }}"
    state: directory
  when: docker_override_options

- name: Configure docker
  template:
    src: service_override.conf
    dest: "{{ docker_override_path }}/override.conf"
    owner: root
    mode: 0644
  when: docker_override_options
  notify:
    - reload systemd
    - restart docker

- name: Add prune command to crontab
  cron:
    name: "docker cleanup"
    special_time: "{{ docker_cleanup_time }}"
    user: "root"
    job: "{{ docker_cron_prune_cmd }}"
    cron_file: docker-cleanup
  when: docker_cron_prune
